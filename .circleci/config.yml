version: 2
jobs:
  build:
    parallelism: 3
    working_directory: ~/circleci-demo-ruby-rails
    docker:
      - image: circleci/ruby:2.4.1-node
        environment:
          RAILS_ENV: test
      - image: circleci/postgres:9.4.12-alpine
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Database setup
      - run:
        name: Generate database.yml
        command: |
          mkdir -p config
          echo 'test:
            database: circle_ruby_test
            adapter: sqlite3
            pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
            timeout: 5000
            username: ubuntu
            host: localhost' > config/database.yml


      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load --trace

      # Run rspec in parallel
      - run: bundle exec rspec

      # Save test results for timing analysis
      - store_test_results:
          path: test_results
